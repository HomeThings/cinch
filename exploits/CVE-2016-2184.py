#!/usr/bin/env python3


from USB import *
from USBDevice import *
from USBConfiguration import *
from USBInterface import *
from USBEndpoint import *

class PwnUSBDevice(USBDevice):
    name = "USB device"
    
    def handle_buffer_available(self, lll):
        return

    def __init__(self, maxusb_app, verbose=0):
        
        interface = USBInterface(
                0,                      # interface number
                0,                      # alternate setting
                0,                      # interface class
                0,                      # subclass
                0,                      # protocol
                0,                      # string index
                verbose,
                [],
                {}
        )

        config = USBConfiguration(
                1,                      # index
                "Emulated Device",      # string desc
                [ interface ]           # interfaces
        )

        USBDevice.__init__(
                self,
                maxusb_app,
                0,                      # device class
                0,                      # device subclass
                0,                      # protocol release number
                64,                     # max packet size for endpoint 0
                0x045e,                 # vendor id
                0x0283,                 # product id
                0x100,                  # device revision
                "Microsoft Corp.",      # manufacturer string
                "Xbox Communicator",    # product string
                "?",                    # serial number string
                [ config ],
                verbose=verbose
        )


from Facedancer import *
from MAXUSBApp import *

sp = GoodFETSerialPort()
fd = Facedancer(sp, verbose=1)
u = MAXUSBApp(fd, verbose=1)

d = PwnUSBDevice(u, verbose=4)

d.connect()

try:
    d.run()
except KeyboardInterrupt:
    d.disconnect()
